renderPlot({
ggplot(ReactiveGamesPlayedAgainstOpponent() ,aes(x = reorder(Opponent ,GamesPlayed ,function(x) {x}) ,y = GamesPlayed)) +
geom_col() +
coord_flip() +
scale_y_continuous(labels = scales::comma) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,1)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
})
selectInput("PlayerInput2"
,"Select a player:"
,choices = PlayerNames$Player
,selected = TopPlayer)
ReactiveDamageGiven <- reactive({
DamageGivenByPlayer %>%
filter(Player == input$PlayerInput2)
})
TopDamageGiven <- DamageGivenByPlayer %>%
summarise(MaxDamageGiven = max(AvgDamageGiven)) %>%
as.numeric()
BottomDamageGiven <- DamageGivenByPlayer %>%
summarise(MaxDamageGiven = min(AvgDamageGiven)) %>%
as.numeric()
renderValueBox(
valueBox(ReactiveDamageGiven() %>% select(AvgDamageGiven) %>% as.numeric() %>% round(digits = 0)
,icon = "fa-gavel"
,color = ifelse(ReactiveDamageGiven() %>% select(AvgDamageGiven) %>% as.numeric() >= floor(TopDamageGiven), "success", ifelse(ReactiveDamageGiven() %>% select(AvgDamageGiven) %>% as.numeric() <= ceiling(BottomDamageGiven) ,"danger" ,"warning")))
)
ReactiveLongestLoseStreak <- reactive({
SmashData %>%
filter(Player == input$PlayerInput2) %>%
summarise(LongestLoseStreak2 = max(rle(OpponentWin == 1)[[1]][rle(OpponentWin == 1)[[2]] == 1])) %>%
as.numeric()
})
renderValueBox(
valueBox(ReactiveLongestLoseStreak()
,color = ifelse(ReactiveLongestLoseStreak() < 4 ,"success" ,ifelse(ReactiveLongestLoseStreak() < 6  ,"warning" ,"danger")))
)
WinPercentByCharacter <- SmashData %>%
group_by(Player ,Character) %>%
summarise(WinPercent = sum(Win) / n())
ReactiveWinPercentByCharacter <- reactive({
WinPercentByCharacter %>%
filter(Player == input$PlayerInput2) %>%
left_join(WinPercentData %>% select(Player ,WinPercentUnformatted) ,by = "Player")
})
renderPlot({
ggplot(ReactiveWinPercentByCharacter() ,aes(x = reorder(Character ,WinPercent ,function(x) {x}) ,y = WinPercent ,fill = WinPercent)) +
geom_col() +
coord_flip() +
scale_y_continuous(limits = c(0 ,1) ,labels = scales::percent) +
geom_hline(yintercept = ReactiveWinPercentByCharacter() %>% select(WinPercentUnformatted) %>% unique() %>% as.numeric()) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,1) ,labels = scales::percent) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight() +
theme(legend.position = "none")
})
DamageGivenByCharacter <- SmashData %>%
group_by(Player ,Character) %>%
summarise(AvgDamageGivenByCharacter = mean(DamageGiven))
TopDamageGivenByCharacter <- DamageGivenByCharacter %>%
ungroup() %>%
summarise(MaxDamageGivenByCharacter = max(AvgDamageGivenByCharacter)) %>%
select(MaxDamageGivenByCharacter) %>%
as.numeric()
BottomDamageGivenByCharacter <- DamageGivenByCharacter %>%
ungroup() %>%
summarise(MinDamageGivenByCharacter = min(AvgDamageGivenByCharacter)) %>%
select(MinDamageGivenByCharacter) %>%
as.numeric()
ReactiveAvgDamageGivenByCharacter <- reactive({
DamageGivenByCharacter %>%
filter(Player == input$PlayerInput2) %>%
left_join(DamageGivenByPlayer ,by = "Player")
})
renderPlot({
ggplot(ReactiveAvgDamageGivenByCharacter() ,aes(x = reorder(Character ,AvgDamageGivenByCharacter ,function(x) {x}) ,y = AvgDamageGivenByCharacter ,fill = AvgDamageGivenByCharacter)) +
geom_col() +
coord_flip() +
scale_y_continuous(limits = c(0 ,TopDamageGivenByCharacter + 15) ,labels = scales::comma) +
geom_hline(yintercept = ReactiveAvgDamageGivenByCharacter() %>% select(AvgDamageGiven) %>% unique() %>% as.numeric()) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(floor(BottomDamageGivenByCharacter) ,ceiling(TopDamageGivenByCharacter)) ,labels = scales::comma) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight() +
theme(legend.position = "none")
})
MaxKos <- KosByPlayer %>%
summarise(MaxKos = max(AvgKos)) %>%
as.numeric()
MinKos <- KosByPlayer %>%
summarise(MinKos = min(AvgKos)) %>%
as.numeric()
ReactiveKos <- reactive({
KosByPlayer %>%
filter(Player == input$PlayerInput2)
})
renderValueBox(
valueBox(ReactiveKos() %>% select(AvgKos) %>% as.numeric() %>% round(digits = 2)
,icon = "fa-heart"
,color = ifelse(ReactiveKos() %>% select(AvgKos) %>% as.numeric() >= floor(MaxKos / .01) * .01, "success", ifelse(ReactiveKos() %>% select(AvgKos) %>% as.numeric() <= ceiling(MinKos / .01) * .01 ,"danger" ,"warning")))
)
ReactiveCurrentLoseStreak <- reactive({
SmashData %>%
filter(Player == input$PlayerInput2) %>%
select(OpponentWin) %>%
summarise(Current = ifelse(rle(OpponentWin)$values[length(rle(OpponentWin)$values)] == 0 ,0 ,rle(OpponentWin)$lengths[length(rle(OpponentWin)$lengths)])) %>%
as.numeric()
})
renderValueBox(
valueBox(ReactiveCurrentLoseStreak()
,color = ifelse(ReactiveCurrentLoseStreak() == 0, "success" ,ifelse(ReactiveCurrentLoseStreak() < 3  ,"warning" ,"danger")))
)
ReactiveGamesPlayedByCharacter <- reactive({
SmashData %>%
filter(Player == input$PlayerInput2) %>%
group_by(Character) %>%
summarise(GamesPlayed = n())
})
renderPlot({
ggplot(ReactiveGamesPlayedByCharacter() ,aes(x = reorder(Character ,GamesPlayed ,function(x) {x}) ,y = GamesPlayed)) +
geom_col() +
coord_flip() +
scale_y_continuous(labels = scales::comma) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,1)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
})
MinKos <- KosByPlayer %>%
summarise(MinKos = min(AvgKos)) %>%
as.numeric()
KosByCharacter <- SmashData %>%
group_by(Player ,Character) %>%
summarise(AvgKosByCharacter = mean(KO))
MinKosByCharacter <- KosByCharacter %>%
ungroup() %>%
summarise(MinKos = min(AvgKosByCharacter)) %>%
as.numeric()
MaxKosByCharacter <- KosByCharacter %>%
ungroup() %>%
summarise(MaxKos = max(AvgKosByCharacter)) %>%
as.numeric()
ReactiveKosByCharacter <- reactive({
KosByCharacter %>%
filter(Player == input$PlayerInput2) %>%
left_join(KosByPlayer ,by = "Player")
})
renderPlot({
ggplot(ReactiveKosByCharacter() ,aes(x = reorder(Character ,AvgKosByCharacter ,function(x) {x}) ,y = AvgKosByCharacter ,fill = AvgKosByCharacter)) +
geom_col() +
coord_flip() +
scale_y_continuous(limits = c(0 ,3)) +
geom_hline(yintercept = ReactiveKosByCharacter() %>% select(AvgKos) %>% unique() %>% as.numeric()) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(floor(MinKosByCharacter) ,ceiling(MaxKosByCharacter)) ,labels = scales::comma) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight() +
theme(legend.position = "none")
})
renderPlot({
ggplot(WinPercentData ,aes(x = reorder(Player ,WinPercentUnformatted ,function(x) {x}) ,y = WinPercentUnformatted)) +
geom_col() +
coord_flip() +
scale_y_continuous(limits = c(0 ,1) ,labels = scales::percent) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
})
MaxAvgDamageGivenByPlayer <- DamageGivenByPlayer %>%
ungroup() %>%
summarise(MaxAvgDamageGiven = max(AvgDamageGiven)) %>%
as.numeric()
MaxAvgDamageGivenByPlayer <- max(c(MaxAvgDamageGivenByPlayer ,400))
renderPlot({
ggplot(DamageGivenByPlayer ,aes(x = reorder(Player ,AvgDamageGiven ,function(x) {x}) ,y = AvgDamageGiven)) +
geom_col() +
coord_flip() +
scale_y_continuous(labels = scales::comma ,limit = c(0,400)) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
})
renderPlot({
ggplot(KosByPlayer ,aes(x = reorder(Player ,AvgKos ,function(x) {x}) ,y = AvgKos)) +
geom_col() +
coord_flip() +
scale_y_continuous(labels = scales::comma ,limit = c(0,3)) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
})
GamesPlayedByPlayer <- SmashData %>%
group_by(Player) %>%
summarise(GamesPlayed = n())
renderPlot({
ggplot(GamesPlayedByPlayer ,aes(x = reorder(Player ,GamesPlayed ,function(x) {x}) ,y = GamesPlayed)) +
geom_col() +
coord_flip() +
scale_y_continuous(labels = scales::comma) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
})
WinPercentData
WinPercentData
SmashData
View(SmashData)
SmashData %>%
group_by(Player) %>%
mutate(PlayerGameNumber = row_number())
SmashData %>%
group_by(Player) %>%
mutate(PlayerGameNumber = row_number()) %>%
select (PlayerGameNumber ,everything())
SmashData %>%
group_by(Player) %>%
mutate(PlayerGameNumber = row_number()) %>%
select (PlayerGameNumber ,everything()) %>%
View()
SmashData %>%
group_by(Player) %>%
mutate(PlayerGameNumber = row_number()) %>%
select (PlayerGameNumber ,everything()) %>%
group_by(PlayerGameNumber ,Player) %>%
summarise(Wins = sum(Win))
SmashData %>%
group_by(Player) %>%
mutate(PlayerGameNumber = row_number()) %>%
select (PlayerGameNumber ,everything()) %>%
group_by(PlayerGameNumber ,Player) %>%
summarise(Wins = cumsum(Win))
SmashData %>%
group_by(Player) %>%
mutate(PlayerGameNumber = row_number()) %>%
select (PlayerGameNumber ,everything()) %>%
group_by(PlayerGameNumber ,Player) %>%
summarise(Wins = cumsum(Win)) %>%
View()
SmashData %>%
group_by(Player) %>%
mutate(PlayerGameNumber = row_number()) %>%
select (PlayerGameNumber ,everything()) %>%
group_by(PlayerGameNumber ,Player) %>%
summarise(Wins = sum(Win))
SmashData %>%
group_by(Player) %>%
mutate(PlayerGameNumber = row_number()) %>%
select (PlayerGameNumber ,everything()) %>%
group_by(PlayerGameNumber ,Player) %>%
summarise(Wins = sum(Win)) %>%
View()
SmashData %>%
group_by(Player) %>%
mutate(PlayerGameNumber = row_number()) %>%
select (PlayerGameNumber ,everything()) %>%
group_by(PlayerGameNumber ,Player) %>%
summarise(Wins = sum(Win)
,WinsOverTime = cumsum(Wins)) %>%
View()
SmashData %>%
group_by(Player) %>%
mutate(PlayerGameNumber = row_number()) %>%
select (PlayerGameNumber ,Player ,Win)
SmashData %>%
group_by(Player) %>%
mutate(PlayerGameNumber = row_number()) %>%
select (PlayerGameNumber ,Player ,Win)
PlayerWinsoverTime <- SmashData %>%
group_by(Player) %>%
mutate(PlayerGameNumber = row_number()) %>%
select (PlayerGameNumber ,Player ,Win)
PlayerWinsoverTime %>%
mutate(WinsOverTime = cumsum(Wins))
PlayerWinsoverTime
PlayerWinsoverTime %>%
mutate(WinsOverTime = cumsum(Win))
PlayerWinsoverTime %>%
mutate(WinsOverTime = cumsum(Win)) %>%
View()
PlayerWinsoverTime %>%
mutate(WinsOverTime = cumsum(Win)) %>%
select(-Win)
PlayerWinsoverTime <- PlayerWinsoverTime %>%
mutate(WinsOverTime = cumsum(Win)) %>%
select(-Win)
PlayerWinsOverTime <- SmashData %>%
group_by(Player) %>%
mutate(PlayerGameNumber = row_number()) %>%
select (PlayerGameNumber ,Player ,Win)
PlayerWinsOverTime <- PlayerWinsOverTime %>%
mutate(WinsOverTime = cumsum(Win)) %>%
select(-Win)
PlayerWinsOverTime
max(PlayerWinsOverTime$WinsOverTime)
MaxGamesPlayedByPlayer <- max(PlayerWinsOverTime$WinsOverTime)
PlayerWinsOverTime
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line()
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line() +
scale_y_continuous(labels = scales::comma)
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line() +
geom_jitter() +
scale_y_continuous(labels = scales::comma)
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line(position=position_jitter(w=0.02, h=0))
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line(position=position_jitter())
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line(position=position_jitter(h=.2))
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line(position=position_jitter(h=.02))
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line()
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line() +
scale_y_continuous(labels = pretty_breaks())
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line() +
scale_y_continuous(breaks = pretty_breaks())
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line() +
scale_x_continuous(breaks = pretty_breaks())
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line() +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Game Number" ,y =) +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line() +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Game Number" ,y = "Wins") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line() +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight() +
labs(x = "Game Number" ,y = "Wins")
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line() +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
labs(x = "Game Number" ,y = "Wins") +
scale_color_brewer(palette = "Set1") +
# theme(plot.title = element_text(hjust = 0.5)) +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
?geom_line
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line(size = 3) +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
labs(x = "Game Number" ,y = "Wins") +
scale_color_brewer(palette = "Set1") +
# theme(plot.title = element_text(hjust = 0.5)) +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
labs(x = "Game Number" ,y = "Wins") +
scale_color_brewer(palette = "Set1") +
# theme(plot.title = element_text(hjust = 0.5)) +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line(size = 1) +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
labs(x = "Game Number" ,y = "Wins") +
scale_color_brewer(palette = "Set1") +
# theme(plot.title = element_text(hjust = 0.5)) +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line(size = 1) +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
labs(x = "Game Number" ,y = "Wins") +
scale_color_brewer(palette = "Set2") +
# theme(plot.title = element_text(hjust = 0.5)) +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line(size = 1) +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
labs(x = "Game Number" ,y = "Wins") +
scale_color_brewer(palette = "Set3") +
# theme(plot.title = element_text(hjust = 0.5)) +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line(size = 1) +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
labs(x = "Game Number" ,y = "Wins") +
scale_color_brewer(palette = "Set1") +
# theme(plot.title = element_text(hjust = 0.5)) +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
ggplot(ReactiveWinPercentAgainstCharacter() ,aes(x = reorder(OpponentCharacter ,WinPercent ,function(x) {x}) ,y = WinPercent ,fill = WinPercent)) +
geom_col() +
coord_flip() +
scale_y_continuous(limits = c(0 ,1) ,labels = scales::percent) +
geom_hline(yintercept = ReactiveWinPercentAgainstCharacter() %>% select(WinPercentUnformatted) %>% unique() %>% as.numeric()) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,1) ,labels = scales::percent) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight() +
theme(legend.position = "none")
?theme_fivethirtyeight
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line(size = 1) +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
scale_color_brewer(palette = "Set1") +
# theme(plot.title = element_text(hjust = 0.5)) +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight() +
labs(x = "Game Number" ,y = "Wins")
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line(size = 1) +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
scale_color_brewer(palette = "Set1") +
# theme(plot.title = element_text(hjust = 0.5)) +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight() +
xlab("Game Number")
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line() +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
scale_color_brewer(palette = "Set1") +
# theme(plot.title = element_text(hjust = 0.5)) +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight(axis.title = element_text()) +
lab(x = "Game Number" , y = "Wins")
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line() +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
scale_color_brewer(palette = "Set1") +
# theme(plot.title = element_text(hjust = 0.5)) +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight() +
theme(axis.title = element_text()) +
lab(x = "Game Number" , y = "Wins")
ggplot(PlayerWinsOverTime ,aes(x = PlayerGameNumber ,y = WinsOverTime ,color = Player)) +
geom_line() +
scale_x_continuous(breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
scale_color_brewer(palette = "Set1") +
# theme(plot.title = element_text(hjust = 0.5)) +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(0 ,MaxWeeksAsKing)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight() +
theme(axis.title = element_text()) +
labs(x = "Game Number" , y = "Wins")
